/**
 ******************************************************************************
 **	ファイル名 : main.oil
 **
 **	概要       : サンプル用OSEK OIL(OSEK Implementation Language)ファイル
 **
 ** ※OSEK OIL記述方法詳細については
 **   nxtOSEK\toppers_osek\doc\TOPPERS_OSEKカーネルSG取扱説書.pdfを参照してください。
 ** 
 ******************************************************************************
 **/
#include "implementation.oil"

CPU ATMEL_AT91SAM7S256
{
  OS LEJOS_OSEK /* nxtOSEKの旧名 */
  {
    STATUS = EXTENDED;
    STARTUPHOOK = FALSE;
    ERRORHOOK = FALSE;
    SHUTDOWNHOOK = FALSE;
    PRETASKHOOK = FALSE;
    POSTTASKHOOK = FALSE;
    USEGETSERVICEID = FALSE;
    USEPARAMETERACCESS = FALSE;
    USERESSCHEDULER = FALSE;
  };

  APPMODE appmode1{}; 

  /* Clock 使用に必要 */
  EVENT EventSleepI2C
  {
	MASK = AUTO;
  };

  /* Clock 使用に必要 */
  EVENT EventSleep
  {
	MASK = AUTO;
  };

  /* Driveタスク設定 */
  TASK TaskDrive
  {
    AUTOSTART = TRUE /* StartOSで自動的にREADY */
    {
      APPMODE = appmode1;
    };
    PRIORITY = 1; /* 最低優先度 */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* bytes */
    EVENT = EventSleepI2C;
    EVENT = EventSleep;
    EVENT = EventDrive;
  };
 
  EVENT EventDrive
  {
	MASK = AUTO;
  };

  ALARM AlarmDrive
  {
    COUNTER = SysTimerCnt;
    ACTION = SETEVENT
    {
         TASK = TaskDrive;
         EVENT = EventDrive;
    };
    AUTOSTART = FALSE; /* タスク周期設定はソースコードで。*/
  };

  /* GPS更新タスク設定 */
  TASK TaskGps
  {
    AUTOSTART = TRUE /* StartOSで自動的にREADY */
    {
      APPMODE = appmode1;
    };
    PRIORITY = 2;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* bytes */
    EVENT = EventGps;
  };

  EVENT EventGps
  {
	MASK = AUTO;
  };

  ALARM AlarmGps
  {
    COUNTER = SysTimerCnt;
    ACTION = SETEVENT
    {
         TASK = TaskGps;
         EVENT = EventGps;
    };
    AUTOSTART = FALSE; /* タスク周期設定はソースコードで。*/
  };

  /* History更新タスク設定 */
  TASK TaskHistory
  {
    AUTOSTART = TRUE /* StartOSで自動的にREADY */
    {
      APPMODE = appmode1;
    };
    PRIORITY = 2;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* bytes */
    EVENT = EventHistory;
  };

  EVENT EventHistory
  {
	MASK = AUTO;
  };

  ALARM AlarmHistory
  {
    COUNTER = SysTimerCnt;
    ACTION = SETEVENT
    {
         TASK = TaskHistory;
         EVENT = EventHistory;
    };
    AUTOSTART = FALSE; /* タスク周期設定はソースコードで。*/
  };

  /* Sonarタスク設定 */
  TASK TaskSonar
  {
    AUTOSTART = TRUE /* StartOSで自動的にREADY */
    {
      APPMODE = appmode1;
    };
    PRIORITY = 1; /* 最低優先度 */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* bytes */
    EVENT = EventSleepI2C;
    EVENT = EventSleep;
    EVENT = EventSonar;
  };
 
  EVENT EventSonar
  {
	MASK = AUTO;
  };

  ALARM AlarmSonar
  {
    COUNTER = SysTimerCnt;
    ACTION = SETEVENT
    {
         TASK = TaskSonar;
         EVENT = EventSonar;
    };
    AUTOSTART = FALSE; /* タスク周期設定はソースコードで。*/
  };

  /* Logger(Bluetooth)タスク設定 */
  TASK TaskLogger
  {
    AUTOSTART = TRUE /* StartOSで自動的にREADY */
    {
      APPMODE = appmode1;
    };
    PRIORITY = 1; /* 最低優先度 */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* bytes */
    EVENT = EventLogger;
  };
 
  EVENT EventLogger
  {
	MASK = AUTO;
  };

  ALARM AlarmLogger
  {
    COUNTER = SysTimerCnt;
    ACTION = SETEVENT
    {
         TASK = TaskLogger;
         EVENT = EventLogger;
    };
    AUTOSTART = FALSE; /* タスク周期設定はソースコードで。*/
  };

  /* 周期タスク起動用カウンタ */
  COUNTER SysTimerCnt
  {
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 10000;
    TICKSPERBASE = 1;
  };
};

